<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/mvc  
         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	


	<context:component-scan base-package="com.yuantel" />
	<context:component-scan base-package="com.yuantel.controller" />
	<context:annotation-config />
	<mvc:default-servlet-handler />
	<mvc:annotation-driven />
	
	
	
	<bean id="logAspect"  class="com.yuantel.util.Aspect.LogAspect" />
	
	<bean id="otherProxy" 
class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
               <value>*Controller</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>logAspect</value>
            </list>
        </property>
    </bean>
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
				<value>classpath:system.properties</value>
			</list>
		</property>

	</bean>
	<bean name="yuantelDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >  
       <property name="driverClassName" value="${database.driverClassName}" />  
       <property name="url" value="${database.url}" />
       <property name="username" value="${database.username}" /> 
        <property name="password" value="${database.password}" />
        <!-- 设定最大连接数  -->
       <property name="maxActive"><value>500</value></property>
       <!-- 设定最大空闲时间（毫秒） -->
       <property name="maxIdle"><value>10000</value></property>
       <!-- 设定最大等待时间（毫秒） -->
       <property name="maxWait"><value>1000</value></property>
       <!-- 超时自动收回 -->
       <property name="removeAbandoned"><value>true</value></property>
       <!--
                  超时时间(以秒数为单位)设置超时时间有一个要注意的地方，
                  超时时间=现在的时间-程序中创建Connection的时间，如果
                  maxActive比较大，比如超过100，那么removeAbandonedTimeout
                  可以设置长一点比如180， 也就是三分钟无响应的连接进行回收，
                  当然应用的不同设置长度也不同。
       -->
       <property name="removeAbandonedTimeout"><value>180</value></property>
       <!-- 在自动回收超时连接的时候打印连接的超时错误 -->
       <property name="logAbandoned"><value>true</value></property>
    </bean>
    
	<bean id="yuantelSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="yuantelDataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<property name="mapperLocations" value="classpath:com/yuantel/mappers/*.xml" />
	</bean>
	
	 <!-- 使用annotation注解方式配置事务 -->
	 <tx:annotation-driven transaction-manager="yuantelTransactionManager" proxy-target-class="true"/>
	 

	<bean id="yuantelTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="yuantelDataSource" />
	</bean>	
	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	   <property name="sqlSessionFactoryBeanName" value="yuantelSqlSessionFactory"></property> 
	   <property name="basePackage" value="com.yuantel.dao" />
	</bean>
	

</beans>